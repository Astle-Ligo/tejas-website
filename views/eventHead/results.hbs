<section class="py-20 px-6 bg-beige text-bistre min-h-screen flex justify-center items-center">
    <div class="bg-white p-8 shadow-lg rounded-lg max-w-2xl w-full">
        <h2 class="text-3xl font-bold text-coffee text-center mb-6 font-handwritten">Results Entry</h2>
        <p class="text-center text-lg text-bistre">
            Welcome, <strong class="font-handwritten">{{eventHeadUser.Name}}</strong>
        </p>
        <form id="resultsForm" action="/eventHead/results" method="POST" class="space-y-4">
            <input type="hidden" name="resultId" id="resultId">

            <div>
                <label class="block font-semibold">Select Event:</label>
                <select name="eventId" id="event" class="w-full p-2 border border-khaki rounded font-handwritten"
                    required onchange="loadParticipants(this)">
                    <option value="">-- Select an Event --</option>
                    {{#each events}}
                    <option value="{{this._id}}" data-event-name="{{this.eventName}}">{{this.eventName}}</option>
                    {{/each}}
                </select>
                <input type="hidden" name="eventName" id="eventName">
            </div>

            <!-- Winners Section -->
            <div id="winnersSection">
                <!-- First Place Winners -->
                <div class="winner-group">
                    <label class="block font-semibold">First Place Winner:</label>
                    <div id="firstPlaceContainer">
                        <select name="firstPlace[]" class="w-full p-2 border border-khaki rounded font-handwritten"
                            required>
                            <option value="">-- Select First Place Winner --</option>
                        </select>
                    </div>
                    <button type="button" onclick="addWinner('firstPlaceContainer', 'firstPlace[]')"
                        class="mt-2 bg-coffee text-beige px-4 py-1 rounded hover:bg-bistre transition">
                        + Add More
                    </button>
                </div>

                <!-- Second Place Winners -->
                <div class="winner-group">
                    <label class="block font-semibold">Second Place Winner:</label>
                    <div id="secondPlaceContainer">
                        <select name="secondPlace[]" class="w-full p-2 border border-khaki rounded font-handwritten"
                            required>
                            <option value="">-- Select Second Place Winner --</option>
                        </select>
                    </div>
                    <button type="button" onclick="addWinner('secondPlaceContainer', 'secondPlace[]')"
                        class="mt-2 bg-coffee text-beige px-4 py-1 rounded hover:bg-bistre transition">
                        + Add More
                    </button>
                </div>

                <!-- Third Place Winners -->
                <div class="winner-group">
                    <label class="block font-semibold">Third Place Winner:</label>
                    <div id="thirdPlaceContainer">
                        <select name="thirdPlace[]" class="w-full p-2 border border-khaki rounded font-handwritten"
                            required>
                            <option value="">-- Select Third Place Winner --</option>
                        </select>
                    </div>
                    <button type="button" onclick="addWinner('thirdPlaceContainer', 'thirdPlace[]')"
                        class="mt-2 bg-coffee text-beige px-4 py-1 rounded hover:bg-bistre transition">
                        + Add More
                    </button>
                </div>
            </div>

            <button type="submit"
                class="w-full py-2 bg-coffee text-beige font-bold rounded-lg hover:bg-bistre transition font-handwritten">
                Submit Results
            </button>
        </form>
    </div>
</section>

<script>
    async function loadParticipants(eventSelect) {
        const eventId = eventSelect.value;
        const eventName = eventSelect.options[eventSelect.selectedIndex]?.getAttribute("data-event-name");
        document.getElementById("eventName").value = eventName || "";

        // Get winner containers
        const firstPlaceContainer = document.getElementById("firstPlaceContainer");
        const secondPlaceContainer = document.getElementById("secondPlaceContainer");
        const thirdPlaceContainer = document.getElementById("thirdPlaceContainer");

        // Clear existing selections
        firstPlaceContainer.innerHTML = '<select name="firstPlace[]" class="w-full p-2 border border-khaki rounded font-handwritten" required><option value="">-- Select First Place Winner --</option></select>';
        secondPlaceContainer.innerHTML = '<select name="secondPlace[]" class="w-full p-2 border border-khaki rounded font-handwritten" required><option value="">-- Select Second Place Winner --</option></select>';
        thirdPlaceContainer.innerHTML = '<select name="thirdPlace[]" class="w-full p-2 border border-khaki rounded font-handwritten" required><option value="">-- Select Third Place Winner --</option></select>';


        if (!eventId) return;

        try {
            const response = await fetch(`/eventHead/getParticipants/${eventId}`);
            const participants = await response.json();

            participants.forEach(participant => {
                let displayName = "";

                if (participant.type === "individual") {
                    displayName = `${participant.name} (${participant.class})`;
                } else if (participant.type === "group") {
                    displayName = `Team - ${participant.teamName} (${participant.class})`;
                }

                const option = `<option value="${participant._id}" class="font-handwritten">${displayName}</option>`;

                firstPlaceContainer.querySelector("select").innerHTML += option;
                secondPlaceContainer.querySelector("select").innerHTML += option;
                thirdPlaceContainer.querySelector("select").innerHTML += option;
            });
        } catch (error) {
            console.error("Error fetching participants:", error);
        }
    }

    function addWinner(containerId, fieldName) {
        const container = document.getElementById(containerId);
        if (!container) return;

        const firstSelect = container.querySelector("select");
        if (!firstSelect) return;

        // Clone the first select element, reset value and enforce required
        const newSelect = firstSelect.cloneNode(true);
        newSelect.name = fieldName;
        newSelect.value = "";
        newSelect.required = true;

        // Create a wrapper div to hold the select and delete button
        const winnerEntry = document.createElement("div");
        winnerEntry.classList.add("winner-entry", "flex", "items-center", "gap-2", "mt-2");

        // Create delete button with "Delete" text
        const deleteButton = document.createElement("button");
        deleteButton.type = "button";
        deleteButton.textContent = "Delete";
        deleteButton.classList.add("text-white", "bg-red-500", "hover:bg-red-700", "px-2", "py-1", "rounded", "text-sm", "font-semibold", "transition");
        deleteButton.onclick = () => removeWinner(winnerEntry);

        // Append elements
        winnerEntry.appendChild(newSelect);
        winnerEntry.appendChild(deleteButton);
        container.appendChild(winnerEntry);

        // Add event listener to prevent duplicate selections
        newSelect.addEventListener("change", () => handleDuplicateSelection(containerId));
    }

    // Prevent selecting the same participant multiple times in a category
    function handleDuplicateSelection(containerId) {
        const selects = document.querySelectorAll(`#${containerId} select`);
        const selectedValues = new Set();

        selects.forEach(select => {
            selectedValues.add(select.value);
        });

        selects.forEach(select => {
            [...select.options].forEach(option => {
                if (option.value && selectedValues.has(option.value) && option.value !== select.value) {
                    option.disabled = true;
                } else {
                    option.disabled = false;
                }
            });
        });
    }

    // Remove a winner selection
    function removeWinner(entry) {
        entry.remove();
    }
</script>